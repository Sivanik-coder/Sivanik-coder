# -*- coding: utf-8 -*-
"""MallCust_review.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZBb8mbW37-5cFIXqpcqYkU_NW-35Ngay

# Mall Customers - Unsupervised Learning
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from google.colab import files 
uploaded = files.upload()

cust_data=pd.read_csv("Mall_Customers.csv")
cust_data.dtypes
cust_data=cust_data.drop("CustomerID",axis=1)

cust_data

cust_data.isnull().sum()

from sklearn.preprocessing import LabelEncoder
LE=LabelEncoder()
cust_data["Genre"] = LE.fit_transform(cust_data["Genre"])
print(cust_data["Genre"])

cust_data

"""# Data visualization"""

import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

plt.rcParams['figure.figsize'] = (18, 8)

plt.subplot(1, 2, 1)
sns.set(style = 'ticks')
sns.distplot(cust_data['Annual Income (k$)'])
plt.title('Distribution of Annual Income', fontsize = 20)
plt.xlabel('Range of Annual Income')
plt.ylabel('Count')
plt.show()

plt.subplot(1, 2, 2)
sns.set(style = 'ticks')
sns.distplot(cust_data['Age'], color = 'red')
plt.title('Distribution of Age', fontsize = 20)
plt.xlabel('Range of Age')
plt.ylabel('Count')
plt.show()

labels = ['Female', 'Male']
size = cust_data['Genre'].value_counts()
colors = ['lightblue', 'red']
explode = [0, 0.1]

plt.rcParams['figure.figsize'] = (9, 9)
plt.pie(size, colors = colors, explode = explode, labels = labels, shadow = True, autopct = '%.2f%%')
plt.title('Genre', fontsize = 20)
plt.axis('off')
plt.legend()
plt.show()

plt.rcParams['figure.figsize'] = (20, 8)
sns.countplot(cust_data['Age'], palette = 'hsv')
plt.title('Distribution of Age', fontsize = 20)
plt.show()

from sklearn.decomposition import PCA
pca_reducer = PCA(n_components=2)
reduced_data = pca_reducer.fit_transform(cust_data)
reduced_data
reduced_data.shape

from sklearn.cluster import KMeans

km = KMeans(n_clusters=5)

cluster = km.fit(reduced_data)

plt.rcParams['figure.figsize'] = (15, 8)
sns.heatmap(cust_data.corr(), cmap = 'Wistia', annot = True)
plt.title('Heatmap for the Data', fontsize = 20)
plt.show()

plt.scatter(reduced_data[:, 0], reduced_data[:, 1], label='Datapoints')
plt.scatter(cluster.cluster_centers_[:, 0], cluster.cluster_centers_[:, 1],marker='*',s=500,c='red',label='Clusters')
plt.title("Sklearn version of KMeans using PCA")
plt.legend()
plt.show()

"""Here we use elbow method to find the exact no of clusters for explaining the spending score and annual income for mall sales development"""

from sklearn.cluster import KMeans

wcss = []
for i in range(1, 11):
    km = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
    km.fit(cust_data)
    wcss.append(km.inertia_)
wcss
plt.plot(range(1, 11), wcss)
plt.title('The Elbow Method', fontsize = 20)
plt.xlabel('No. of Clusters')
plt.ylabel('wcss')
plt.show()

"""As we can see from 5th point the curve is dropping more so we take no.of clusters =5
Now we use spendIng score and annual income to create the clusters and analyze the data.
"""

# Making  the independent variables matrix
X = cust_data.iloc[:, [2, 3]].values          #i.e., annual income and spending score
X

#Visualizing the clusters
from sklearn.cluster import KMeans
km = KMeans(n_clusters = 5, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
y_means = km.fit_predict(X)

plt.scatter(X[y_means == 0, 0],X[y_means == 0, 1], s = 100, c = 'orange', label = 'general')
plt.scatter(X[y_means == 1, 0], X[y_means == 1, 1], s = 100, c = 'blue', label = 'spends more money')
plt.scatter(X[y_means == 2, 0], X[y_means == 2, 1], s = 100, c = 'red', label = 'target')
plt.scatter(X[y_means == 3, 0], X[y_means == 3, 1], s = 100, c = 'magenta', label = 'saver')
plt.scatter(X[y_means == 4, 0], X[y_means == 4, 1], s = 100, c = 'green', label = 'careful')

plt.scatter(km.cluster_centers_[:,0], km.cluster_centers_[:, 1],marker = '*', s = 500, c = 'black' , label = 'centeroid')

plt.style.use('fivethirtyeight')
plt.title('K Means Clustering', fontsize = 20)
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.legend()
plt.grid()
plt.show()